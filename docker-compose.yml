services:
  pedido-db:
    image: postgres:17-alpine
    container_name: pedido_db
    environment:
      POSTGRES_DB: pedido_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - pedido_pgdata:/var/lib/postgresql/data
    restart: always

  cliente-db:
    image: postgres:17-alpine
    container_name: cliente_db
    restart: always
    environment:
      POSTGRES_DB: cliente_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5431:5432
    volumes:
      - cliente_pgdata:/var/lib/postgresql/data

  estoque-db:
    image: postgres:17-alpine
    container_name: estoque_db
    environment:
      POSTGRES_DB: estoque_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - estoque_pgdata:/var/lib/postgresql/data
    restart: always

  produto-db:
    image: postgres:17-alpine
    container_name: produto_db
    environment:
      POSTGRES_DB: tech_challenge
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5435:5432"
    volumes:
      - produto_pgdata:/var/lib/postgresql/data
    restart: always

  pagamento-db:
    image: postgres:17-alpine
    container_name: pagamento_db
    restart: always
    environment:
      POSTGRES_DB: pagamento_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5436:5432
    volumes:
      - pagamento_pgdata:/var/lib/postgresql/data

  pedido-receiver-service:
    image: dsouzajm/ms-pedido-receiver:1.0.0
    container_name: pedido_receiver_service
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "8085:8080" # expõe porta do cliente (internamente 8080, externamente 8080)
    restart: always

  cliente-service:
    image: dsouzajm/ms-cliente:latest
    container_name: cliente_service
    depends_on:
      - cliente-db
    environment:
      POSTGRES_HOST: cliente-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: cliente_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "8080:8080" # expõe porta do cliente (internamente 8080, externamente 8080)
    restart: always

  produto-service:
    image: correiagui/produto-service:latest
    container_name: produto_service
    depends_on:
      - produto-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://produto-db:5432/tech_challenge
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
    ports:
      - "8081:8080"
    restart: always

  estoque-service:
    image: larissahsilva/ms-estoque:latest
    container_name: estoque_service
    depends_on:
      - estoque-db
    environment:
      POSTGRES_HOST: estoque-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: estoque_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "8083:8080" # expõe porta do estoque (internamente 8080, externamente 8083)
    restart: always

  pagamento-service:
    image: gomesfg/ms-pagamento:latest
    container_name: pagamento_service
    depends_on:
      - pagamento-db
    environment:
      POSTGRES_HOST: pagamento-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: pagamento_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "8084:8080" # expõe porta do pagamento (internamente 8080, externamente 8084)
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_pedido
    ports:
      - "5673:5672"          # Porta AMQP ajustada para evitar conflito
      - "15673:15672"        # Painel web também ajustado
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: always

  pedido-service:
    build:
      context: .
    container_name: pedido_service
    depends_on:
      - pedido-db
      - rabbitmq
      - estoque-service
      - produto-service
      - pagamento-service
      - cliente-service
      - pedido-receiver-service
    ports:
      - "8082:8080"
      - "5005:5005"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://pedido-db:5432/pedido_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres

      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

      CLIENTE_URL: http://cliente-service:8080
      PRODUTO_URL: http://produto-service:8080
      ESTOQUE_URL: http://estoque-service:8080
      PAGAMENTO_URL: http://pagamento-service:8080
      _JAVA_OPTIONS: >
        -Xdebug 
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    restart: always

volumes:
  pedido_pgdata:
  estoque_pgdata:
  produto_pgdata:
  pagamento_pgdata:
  cliente_pgdata:
